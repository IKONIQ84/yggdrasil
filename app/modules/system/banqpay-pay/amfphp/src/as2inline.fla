                        //This code can be directly copied and pasted onto frame 1 and should work 
//practically as is. Obviously this is not recommended practice but it should 
//give you a head start

import mx.remoting.*;
import mx.rpc.*;
import mx.utils.Delegate;
import mx.remoting.debug.NetDebug;

//Change the gateway URL as needed
var gatewayUrl:String = "http://www.5etdemi.com/amfphp/gateway.php";

NetDebug.initialize();
service = new Service(gatewayUrl, null, "pizzaService");
	
	
//Order is the remote method that places an order First argument is the name of the person who orders it Second argument is an array of pizzas, like so: [{quantity:3, details:'Some really good pizza with onions and anchovies'}]
function order(name, orders)
{
	var pc:PendingCall = service.order(name, orders);
	pc.responder = new RelayResponder(this, "handleOrder", null);
}
	
//cancelOrder takes an order id as it's input and then sets the order_status field to 0.
function cancelOrder(orderId)
{
	var pc:PendingCall = service.cancelOrder(orderId);
	pc.responder = new RelayResponder(this, "handleCancelOrder", null);
}
	
//getOrderList returns a recordset of all of the orders that have an order_status of 1
function getOrderList()
{
	var pc:PendingCall = service.getOrderList();
	pc.responder = new RelayResponder(this, "handleGetOrderList", null);
}
	
//listToppings returns the available toppings as an array
function listToppings()
{
	var pc:PendingCall = service.listToppings();
	pc.responder = new RelayResponder(this, "handleListToppings", null);
}
	

function handleOrder(re:ResultEvent)
{
	//Implement custom callback code
}

function handleCancelOrder(re:ResultEvent)
{
	//Implement custom callback code
}

function handleGetOrderList(re:ResultEvent)
{
	//Implement custom callback code
}

function handleListToppings(re:ResultEvent)
{
	//Implement custom callback code
}
